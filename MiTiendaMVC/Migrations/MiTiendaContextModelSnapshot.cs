// <auto-generated />
using MiTiendaMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiTiendaMVC.Migrations
{
    [DbContext(typeof(MiTiendaContext))]
    partial class MiTiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiTiendaMVC.Models.Canasta", b =>
                {
                    b.Property<int>("CanastaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CanastaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CanastaId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Canastas");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<int?>("CanastaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("CanastaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Canasta", b =>
                {
                    b.HasOne("MiTiendaMVC.Models.Cliente", "Cliente")
                        .WithOne("Canasta")
                        .HasForeignKey("MiTiendaMVC.Models.Canasta", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Producto", b =>
                {
                    b.HasOne("MiTiendaMVC.Models.Canasta", null)
                        .WithMany("Productos")
                        .HasForeignKey("CanastaId");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Canasta", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("MiTiendaMVC.Models.Cliente", b =>
                {
                    b.Navigation("Canasta");
                });
#pragma warning restore 612, 618
        }
    }
}
